# Docker Compose for Akash Navi
version: '3.8'

services:
  # Main application
  akash-navi:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "50000-50100:50000-50100/udp"
    environment:
      - NODE_ENV=production
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env:ro
    restart: unless-stopped

  # Production build
  akash-navi-prod:
    build: 
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env:ro
    restart: unless-stopped
    profiles:
      - production

  # Knowledge plugin as separate service
  knowledge-service:
    build:
      context: ./plugins/plugin-knowledge
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - data:/app/data
    environment:
      - NODE_ENV=production

  # Discord plugin as separate service  
  discord-service:
    build:
      context: ./plugins/plugin-discord
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production

  # External data storage
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: akash_navi
      POSTGRES_USER: navi
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  data:
  postgres_data:
